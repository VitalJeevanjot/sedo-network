{
  "fileName": "EACAggregatorProxy.sol",
  "contractName": "EACAggregatorProxy",
  "source": "pragma solidity 0.6.6;\n\nimport \"./AggregatorProxy.sol\";\nimport \"./interfaces/AccessControllerInterface.sol\";\n\n/**\n * @title External Access Controlled Aggregator Proxy\n * @notice A trusted proxy for updating where current answers are read from\n * @notice This contract provides a consistent address for the\n * Aggregator and AggregatorV3Interface but delegates where it reads from to the owner, who is\n * trusted to update it.\n * @notice Only access enabled addresses are allowed to access getters for\n * aggregated answers and round information.\n */\ncontract EACAggregatorProxy is AggregatorProxy {\n\n  AccessControllerInterface public accessController;\n\n  constructor(\n    address _aggregator,\n    address _accessController\n  )\n    public\n    AggregatorProxy(_aggregator)\n  {\n    setController(_accessController);\n  }\n\n  /**\n   * @notice Allows the owner to update the accessController contract address.\n   * @param _accessController The new address for the accessController contract\n   */\n  function setController(address _accessController)\n    public\n    onlyOwner()\n  {\n    accessController = AccessControllerInterface(_accessController);\n  }\n\n  /**\n   * @notice Reads the current answer from aggregator delegated to.\n   * @dev overridden function to add the checkAccess() modifier\n   *\n   * @dev #[deprecated] Use latestRoundData instead. This does not error if no\n   * answer has been reached, it will simply return 0. Either wait to point to\n   * an already answered Aggregator or use the recommended latestRoundData\n   * instead which includes better verification information.\n   */\n  function latestAnswer()\n    public\n    view\n    override\n    checkAccess()\n    returns (int256)\n  {\n    return super.latestAnswer();\n  }\n\n  /**\n   * @notice get the latest completed round where the answer was updated. This\n   * ID includes the proxy's phase, to make sure round IDs increase even when\n   * switching to a newly deployed aggregator.\n   *\n   * @dev #[deprecated] Use latestRoundData instead. This does not error if no\n   * answer has been reached, it will simply return 0. Either wait to point to\n   * an already answered Aggregator or use the recommended latestRoundData\n   * instead which includes better verification information.\n   */\n  function latestTimestamp()\n    public\n    view\n    override\n    checkAccess()\n    returns (uint256)\n  {\n    return super.latestTimestamp();\n  }\n\n  /**\n   * @notice get past rounds answers\n   * @param _roundId the answer number to retrieve the answer for\n   * @dev overridden function to add the checkAccess() modifier\n   *\n   * @dev #[deprecated] Use getRoundData instead. This does not error if no\n   * answer has been reached, it will simply return 0. Either wait to point to\n   * an already answered Aggregator or use the recommended getRoundData\n   * instead which includes better verification information.\n   */\n  function getAnswer(uint256 _roundId)\n    public\n    view\n    override\n    checkAccess()\n    returns (int256)\n  {\n    return super.getAnswer(_roundId);\n  }\n\n  /**\n   * @notice get block timestamp when an answer was last updated\n   * @param _roundId the answer number to retrieve the updated timestamp for\n   * @dev overridden function to add the checkAccess() modifier\n   *\n   * @dev #[deprecated] Use getRoundData instead. This does not error if no\n   * answer has been reached, it will simply return 0. Either wait to point to\n   * an already answered Aggregator or use the recommended getRoundData\n   * instead which includes better verification information.\n   */\n  function getTimestamp(uint256 _roundId)\n    public\n    view\n    override\n    checkAccess()\n    returns (uint256)\n  {\n    return super.getTimestamp(_roundId);\n  }\n\n  /**\n   * @notice get the latest completed round where the answer was updated\n   * @dev overridden function to add the checkAccess() modifier\n   *\n   * @dev #[deprecated] Use latestRoundData instead. This does not error if no\n   * answer has been reached, it will simply return 0. Either wait to point to\n   * an already answered Aggregator or use the recommended latestRoundData\n   * instead which includes better verification information.\n   */\n  function latestRound()\n    public\n    view\n    override\n    checkAccess()\n    returns (uint256)\n  {\n    return super.latestRound();\n  }\n\n  /**\n   * @notice get data about a round. Consumers are encouraged to check\n   * that they're receiving fresh data by inspecting the updatedAt and\n   * answeredInRound return values.\n   * Note that different underlying implementations of AggregatorV3Interface\n   * have slightly different semantics for some of the return values. Consumers\n   * should determine what implementations they expect to receive\n   * data from and validate that they can properly handle return data from all\n   * of them.\n   * @param _roundId the round ID to retrieve the round data for\n   * @return roundId is the round ID from the aggregator for which the data was\n   * retrieved combined with a phase to ensure that round IDs get larger as\n   * time moves forward.\n   * @return answer is the answer for the given round\n   * @return startedAt is the timestamp when the round was started.\n   * (Only some AggregatorV3Interface implementations return meaningful values)\n   * @return updatedAt is the timestamp when the round last was updated (i.e.\n   * answer was last computed)\n   * @return answeredInRound is the round ID of the round in which the answer\n   * was computed.\n   * (Only some AggregatorV3Interface implementations return meaningful values)\n   * @dev Note that answer and updatedAt may change between queries.\n   */\n  function getRoundData(uint80 _roundId)\n    public\n    view\n    checkAccess()\n    override\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    )\n  {\n    return super.getRoundData(_roundId);\n  }\n\n  /**\n   * @notice get data about the latest round. Consumers are encouraged to check\n   * that they're receiving fresh data by inspecting the updatedAt and\n   * answeredInRound return values.\n   * Note that different underlying implementations of AggregatorV3Interface\n   * have slightly different semantics for some of the return values. Consumers\n   * should determine what implementations they expect to receive\n   * data from and validate that they can properly handle return data from all\n   * of them.\n   * @return roundId is the round ID from the aggregator for which the data was\n   * retrieved combined with a phase to ensure that round IDs get larger as\n   * time moves forward.\n   * @return answer is the answer for the given round\n   * @return startedAt is the timestamp when the round was started.\n   * (Only some AggregatorV3Interface implementations return meaningful values)\n   * @return updatedAt is the timestamp when the round last was updated (i.e.\n   * answer was last computed)\n   * @return answeredInRound is the round ID of the round in which the answer\n   * was computed.\n   * (Only some AggregatorV3Interface implementations return meaningful values)\n   * @dev Note that answer and updatedAt may change between queries.\n   */\n  function latestRoundData()\n    public\n    view\n    checkAccess()\n    override\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    )\n  {\n    return super.latestRoundData();\n  }\n\n  /**\n   * @notice Used if an aggregator contract has been proposed.\n   * @param _roundId the round ID to retrieve the round data for\n   * @return roundId is the round ID for which data was retrieved\n   * @return answer is the answer for the given round\n   * @return startedAt is the timestamp when the round was started.\n   * (Only some AggregatorV3Interface implementations return meaningful values)\n   * @return updatedAt is the timestamp when the round last was updated (i.e.\n   * answer was last computed)\n   * @return answeredInRound is the round ID of the round in which the answer\n   * was computed.\n  */\n  function proposedGetRoundData(uint80 _roundId)\n    public\n    view\n    checkAccess()\n    hasProposal()\n    override\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    )\n  {\n    return super.proposedGetRoundData(_roundId);\n  }\n\n  /**\n   * @notice Used if an aggregator contract has been proposed.\n   * @return roundId is the round ID for which data was retrieved\n   * @return answer is the answer for the given round\n   * @return startedAt is the timestamp when the round was started.\n   * (Only some AggregatorV3Interface implementations return meaningful values)\n   * @return updatedAt is the timestamp when the round last was updated (i.e.\n   * answer was last computed)\n   * @return answeredInRound is the round ID of the round in which the answer\n   * was computed.\n  */\n  function proposedLatestRoundData()\n    public\n    view\n    checkAccess()\n    hasProposal()\n    override\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    )\n  {\n    return super.proposedLatestRoundData();\n  }\n\n  /**\n   * @dev reverts if the caller does not have access by the accessController\n   * contract or is the contract itself.\n   */\n  modifier checkAccess() {\n    AccessControllerInterface ac = accessController;\n    require(address(ac) == address(0) || ac.hasAccess(msg.sender, msg.data), \"No access\");\n    _;\n  }\n}\n",
  "sourcePath": "contracts/chainlink_contracts/chainlink/EACAggregatorProxy.sol",
  "sourceMap": "551:8941:13:-:0;;;657:161;5:9:-1;2:2;;;27:1;24;17:12;2:2;657:161:13;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;657:161:13;;;;;;;;;;;;;;;;;;;;;;;;;760:11;414:10:18;406:5;;:18;;;;;;;;;;;;;;;;;;858:26:8::1;872:11;858:13;;;:26;;:::i;:::-;804:85:::0;781:32:13::1;795:17;781:13;;;:32;;:::i;:::-;657:161:::0;;551:8941;;11847:234:8;11912:9;11942:1;11924:12;:15;;;;;;;;;;;;:19;11912:31;;11964:47;;;;;;;;11970:2;11964:47;;;;;;11998:11;11964:47;;;;;11949:12;:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12064:11;12017:16;:20;12034:2;12017:20;;;;;;;;;;;;;;;;:59;;;;;;;;;;;;;;;;;;11847:234;;:::o;993:153:13:-;1162:5:18;;;;;;;;;;;1148:19;;:10;:19;;;1140:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1123:17:13::1;1078:16;;:63;;;;;;;;;;;;;;;;;;993:153:::0;:::o;551:8941::-;;;;;;;",
  "deployedSourceMap": "551:8941:13:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;551:8941:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;10031:118:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10406:129;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1593:136:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10645:129:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10210:97;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8014:314:13;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;8014:314:13;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4149:135;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10866:143:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10866:143:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;774:254:18;;;:::i;:::-;;2248:143:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;147:20:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8880:297:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;993:153;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;993:153:13;;;;;;;;;;;;;;;;;;;:::i;:::-;;5597:280;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;5597:280:13;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11581:235:8;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;11581:235:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;2867:154:13;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2867:154:13;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3536:161;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3536:161:13;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;603:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;572:66:8;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;572:66:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;519:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;535:150:18;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;535:150:18;;;;;;;;;;;;;;;;;;;:::i;:::-;;11167:147:8;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;11167:147:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;7134:263:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10031:118:8;10088:7;10120:12;:23;;;;;;;;;;;;10105:39;;10031:118;:::o;10406:129::-;10474:5;10496:12;:23;;;;;;;;;;;;:32;;;:34;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;10496:34:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10496:34:8;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;10496:34:8;;;;;;;;;;;;;;;;10489:41;;10406:129;:::o;1593:136:13:-;1681:6;9340:28;9371:16;;;;;;;;;;;9340:47;;9424:1;9401:25;;9409:2;9401:25;;;:63;;;;9430:2;:12;;;9443:10;9455:8;;9430:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;9430:34:13;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;9430:34:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9430:34:13;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;9430:34:13;;;;;;;;;;;;;;;;9401:63;9393:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1704:20:::1;:18;:20::i;:::-;1697:27;;1593:136:::0;;:::o;10645:129:8:-;10712:7;10736:12;:23;;;;;;;;;;;;:31;;;:33;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;10736:33:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10736:33:8;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;10736:33:8;;;;;;;;;;;;;;;;10729:40;;10645:129;:::o;10210:97::-;10264:6;10287:12;:15;;;;;;;;;;;;10280:22;;10210:97;:::o;8014:314:13:-;8150:14;8172:13;8193:17;8218;8243:22;9340:28;9371:16;;;;;;;;;;;9340:47;;9424:1;9401:25;;9409:2;9401:25;;;:63;;;;9430:2;:12;;;9443:10;9455:8;;9430:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;9430:34:13;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;9430:34:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9430:34:13;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;9430:34:13;;;;;;;;;;;;;;;;9401:63;9393:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13042:1:8::1;13003:41;;13011:18;;;;;;;;;;;13003:41;;;;12995:84;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;8287:36:13::2;8314:8;8287:26;:36::i;:::-;8280:43;;;;;;;;;;8014:314:::0;;;;;;;;:::o;4149:135::-;4236:7;9340:28;9371:16;;;;;;;;;;;9340:47;;9424:1;9401:25;;9409:2;9401:25;;;:63;;;;9430:2;:12;;;9443:10;9455:8;;9430:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;9430:34:13;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;9430:34:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9430:34:13;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;9430:34:13;;;;;;;;;;;;;;;;9401:63;9393:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4260:19:::1;:17;:19::i;:::-;4253:26;;4149:135:::0;;:::o;10866:143:8:-;10937:13;10967:12;:23;;;;;;;;;;;;:35;;;:37;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;10967:37:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10967:37:8;;;;;;39:16:-1;36:1;17:17;2:54;10967:37:8;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;15:2;10:3;7:11;4:2;;;31:1;28;21:12;4:2;10967:37:8;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;10967:37:8;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10967:37:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10960:44;;10866:143;:::o;774:254:18:-;844:12;;;;;;;;;;;830:26;;:10;:26;;;822:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;890:16;909:5;;;;;;;;;;;890:24;;928:10;920:5;;:18;;;;;;;;;;;;;;;;;;967:1;944:12;;:25;;;;;;;;;;;;;;;;;;1012:10;981:42;;1002:8;981:42;;;;;;;;;;;;774:254;:::o;2248:143:13:-;2339:7;9340:28;9371:16;;;;;;;;;;;9340:47;;9424:1;9401:25;;9409:2;9401:25;;;:63;;;;9430:2;:12;;;9443:10;9455:8;;9430:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;9430:34:13;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;9430:34:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9430:34:13;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;9430:34:13;;;;;;;;;;;;;;;;9401:63;9393:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2363:23:::1;:21;:23::i;:::-;2356:30;;2248:143:::0;;:::o;147:20:18:-;;;;;;;;;;;;;:::o;8880:297:13:-;9004:14;9026:13;9047:17;9072;9097:22;9340:28;9371:16;;;;;;;;;;;9340:47;;9424:1;9401:25;;9409:2;9401:25;;;:63;;;;9430:2;:12;;;9443:10;9455:8;;9430:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;9430:34:13;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;9430:34:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9430:34:13;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;9430:34:13;;;;;;;;;;;;;;;;9401:63;9393:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13042:1:8::1;13003:41;;13011:18;;;;;;;;;;;13003:41;;;;12995:84;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;9141:31:13::2;:29;:31::i;:::-;9134:38;;;;;;;;;;8880:297:::0;;;;;;:::o;993:153::-;1162:5:18;;;;;;;;;;;1148:19;;:10;:19;;;1140:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1123:17:13::1;1078:16;;:63;;;;;;;;;;;;;;;;;;993:153:::0;:::o;5597:280::-;5707:14;5729:13;5750:17;5775;5800:22;9340:28;9371:16;;;;;;;;;;;9340:47;;9424:1;9401:25;;9409:2;9401:25;;;:63;;;;9430:2;:12;;;9443:10;9455:8;;9430:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;9430:34:13;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;9430:34:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9430:34:13;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;9430:34:13;;;;;;;;;;;;;;;;9401:63;9393:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5844:28:::1;5863:8;5844:18;:28::i;:::-;5837:35;;;;;;;;;;5597:280:::0;;;;;;;;:::o;11581:235:8:-;1162:5:18;;;;;;;;;;;1148:19;;:10;:19;;;1140:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11697:18:8::1;;;;;;;;;;;11674:42;;:11;:42;;;11666:82;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;11761:18;;11754:25;;;;;;;;;;;11785:26;11799:11;11785:13;:26::i;:::-;11581:235:::0;:::o;2867:154:13:-;2968:6;9340:28;9371:16;;;;;;;;;;;9340:47;;9424:1;9401:25;;9409:2;9401:25;;;:63;;;;9430:2;:12;;;9443:10;9455:8;;9430:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;9430:34:13;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;9430:34:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9430:34:13;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;9430:34:13;;;;;;;;;;;;;;;;9401:63;9393:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2991:25:::1;3007:8;2991:15;:25::i;:::-;2984:32;;2867:154:::0;;;;:::o;3536:161::-;3640:7;9340:28;9371:16;;;;;;;;;;;9340:47;;9424:1;9401:25;;9409:2;9401:25;;;:63;;;;9430:2;:12;;;9443:10;9455:8;;9430:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;9430:34:13;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;9430:34:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9430:34:13;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;9430:34:13;;;;;;;;;;;;;;;;9401:63;9393:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3664:28:::1;3683:8;3664:18;:28::i;:::-;3657:35;;3536:161:::0;;;;:::o;603:49::-;;;;;;;;;;;;;:::o;572:66:8:-;;;;;;;;;;;;;;;;;;;;;;:::o;519:49::-;;;;;;;;;;;;;:::o;535:150:18:-;1162:5;;;;;;;;;;;1148:19;;:10;:19;;;1140:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;627:3:::1;612:12;;:18;;;;;;;;;;;;;;;;;;676:3;642:38;;669:5;::::0;::::1;;;;;;;;;642:38;;;;;;;;;;;;535:150:::0;:::o;11167:147:8:-;1162:5:18;;;;;;;;;;;1148:19;;:10;:19;;;1140:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11297:11:8::1;11252:18;;:57;;;;;;;;;;;;;;;;;;11167:147:::0;:::o;7134:263:13:-;7232:14;7254:13;7275:17;7300;7325:22;9340:28;9371:16;;;;;;;;;;;9340:47;;9424:1;9401:25;;9409:2;9401:25;;;:63;;;;9430:2;:12;;;9443:10;9455:8;;9430:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;9430:34:13;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;9430:34:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9430:34:13;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;9430:34:13;;;;;;;;;;;;;;;;9401:63;9393:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7369:23:::1;:21;:23::i;:::-;7362:30;;;;;;;;;;7134:263:::0;;;;;;:::o;1272:155:8:-;1354:13;1384:12;:23;;;;;;;;;;;;:36;;;:38;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1384:38:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1384:38:8;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1384:38:8;;;;;;;;;;;;;;;;1377:45;;1272:155;:::o;8819:300::-;8936:14;8958:13;8979:17;9004;9029:22;13042:1;13003:41;;13011:18;;;;;;;;;;;13003:41;;;;12995:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9073:18:::1;;;;;;;;;;;:31;;;9105:8;9073:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;9073:41:8;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;9073:41:8;;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29::::0;22:12:::1;4:2;9073:41:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9066:48;;;;;;;;;;8819:300:::0;;;;;;;:::o;4168:238::-;4249:15;4274:18;;:::i;:::-;4295:12;4274:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4343:58;4352:5;:8;;;4369:5;:16;;;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4369:30:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4369:30:8;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4369:30:8;;;;;;;;;;;;;;;;4343:8;:58::i;:::-;4336:65;;;;;4168:238;:::o;1815:165::-;1900:17;1934:12;:23;;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1934:41:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1934:41:8;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1934:41:8;;;;;;;;;;;;;;;;1927:48;;1815:165;:::o;9671:283::-;9776:14;9798:13;9819:17;9844;9869:22;13042:1;13003:41;;13011:18;;;;;;;;;;;13003:41;;;;12995:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9913:18:::1;;;;;;;;;;;:34;;;:36;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::1;2:2;9913:36:8;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;9913:36:8;;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29::::0;22:12:::1;4:2;9913:36:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9906:43;;;;;;;;;;9671:283:::0;;;;;:::o;5843:568::-;5947:14;5969:13;5990:17;6015;6040:22;6078:14;6094:24;6122:18;6131:8;6122:18;;:8;:18::i;:::-;6077:63;;;;6155:14;6177:13;6198:17;6223;6248:12;6269:16;:25;6286:7;6269:25;;;;;;;;;;;;;;;;;;;;;;;;;:38;;;6308:17;6269:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;6269:57:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6269:57:8;;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;6269:57:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6147:179;;;;;;;;;;6340:66;6352:7;6361:6;6369:9;6380;6391:5;6398:7;6340:11;:66::i;:::-;6333:73;;;;;;;;;;;;;;;;;5843:568;;;;;;;:::o;11847:234::-;11912:9;11942:1;11924:12;:15;;;;;;;;;;;;:19;11912:31;;11964:47;;;;;;;;11970:2;11964:47;;;;;;11998:11;11964:47;;;;;11949:12;:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12064:11;12017:16;:20;12034:2;12017:20;;;;;;;;;;;;;;;;:59;;;;;;;;;;;;;;;;;;11847:234;;:::o;2392:398::-;2487:13;798:1;727:2;683;771:23;767:1;:28;:32;2514:8;:17;2510:31;;;2540:1;2533:8;;;;2510:31;2549:14;2565:24;2593:18;2602:8;2593;:18::i;:::-;2548:63;;;;2617:34;2654:16;:25;2671:7;2654:25;;;;;;;;;;;;;;;;;;;;;;;;;2617:62;;2720:1;2689:33;;2697:10;2689:33;;;2685:47;;;2731:1;2724:8;;;;;;;2685:47;2746:10;:20;;;2767:17;2746:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2746:39:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2746:39:8;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2746:39:8;;;;;;;;;;;;;;;;2739:46;;;;;2392:398;;;;:::o;3241:408::-;3339:17;798:1;727:2;683;771:23;767:1;:28;:32;3370:8;:17;3366:31;;;3396:1;3389:8;;;;3366:31;3405:14;3421:24;3449:18;3458:8;3449;:18::i;:::-;3404:63;;;;3473:34;3510:16;:25;3527:7;3510:25;;;;;;;;;;;;;;;;;;;;;;;;;3473:62;;3576:1;3545:33;;3553:10;3545:33;;;3541:47;;;3587:1;3580:8;;;;;;;3541:47;3602:10;:23;;;3626:17;3602:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3602:42:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3602:42:8;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3602:42:8;;;;;;;;;;;;;;;;3595:49;;;;;3241:408;;;;:::o;7669:533::-;7761:14;7783:13;7804:17;7829;7854:22;7891:20;;:::i;:::-;7914:12;7891:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7964:14;7986:13;8007:17;8032;8057:12;8078:7;:18;;;:34;;;:36;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;8078:36:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8078:36:8;;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;8078:36:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7956:158;;;;;;;;;;8128:69;8140:7;8149:6;8157:9;8168;8179:5;8186:7;:10;;;8128:11;:69::i;:::-;8121:76;;;;;;;;;;;;;;;;7669:533;;;;;:::o;12085:181::-;12185:6;12249:11;12215:45;;683:2;12223:6;12215:15;;:31;;:45;12201:60;;12085:181;;;;:::o;12270:248::-;12349:6;12357;12373:14;683:2;12397:8;:24;;12373:49;;12428:24;12462:8;12428:43;;12486:7;12495:17;12478:35;;;;;;12270:248;;;:::o;12522:413::-;12727:6;12735;12743:7;12752;12761:6;12792:34;12801:7;12817;12792:8;:34::i;:::-;12834:6;12848:9;12865;12882:42;12891:7;12907:15;12882:8;:42::i;:::-;12777:153;;;;;;;;;;12522:413;;;;;;;;;;;;:::o;551:8941:13:-;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_aggregator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_accessController",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "int256",
          "name": "current",
          "type": "int256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "updatedAt",
          "type": "uint256"
        }
      ],
      "name": "AnswerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "startedBy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startedAt",
          "type": "uint256"
        }
      ],
      "name": "NewRound",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accessController",
      "outputs": [
        {
          "internalType": "contract AccessControllerInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "aggregator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_aggregator",
          "type": "address"
        }
      ],
      "name": "confirmAggregator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "description",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_roundId",
          "type": "uint256"
        }
      ],
      "name": "getAnswer",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint80",
          "name": "_roundId",
          "type": "uint80"
        }
      ],
      "name": "getRoundData",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "roundId",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "answer",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "startedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "updatedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "answeredInRound",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_roundId",
          "type": "uint256"
        }
      ],
      "name": "getTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestAnswer",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestRound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestRoundData",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "roundId",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "answer",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "startedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "updatedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "answeredInRound",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "phaseAggregators",
      "outputs": [
        {
          "internalType": "contract AggregatorV2V3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "phaseId",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_aggregator",
          "type": "address"
        }
      ],
      "name": "proposeAggregator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposedAggregator",
      "outputs": [
        {
          "internalType": "contract AggregatorV2V3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint80",
          "name": "_roundId",
          "type": "uint80"
        }
      ],
      "name": "proposedGetRoundData",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "roundId",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "answer",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "startedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "updatedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "answeredInRound",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposedLatestRoundData",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "roundId",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "answer",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "startedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "updatedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "answeredInRound",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_accessController",
          "type": "address"
        }
      ],
      "name": "setController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "ast": {
    "absolutePath": "contracts/chainlink_contracts/chainlink/EACAggregatorProxy.sol",
    "exportedSymbols": {
      "EACAggregatorProxy": [
        3476
      ]
    },
    "id": 3477,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3234,
        "literals": [
          "solidity",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:13"
      },
      {
        "absolutePath": "contracts/chainlink_contracts/chainlink/AggregatorProxy.sol",
        "file": "./AggregatorProxy.sol",
        "id": 3235,
        "nodeType": "ImportDirective",
        "scope": 3477,
        "sourceUnit": 2050,
        "src": "24:31:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/chainlink_contracts/chainlink/interfaces/AccessControllerInterface.sol",
        "file": "./interfaces/AccessControllerInterface.sol",
        "id": 3236,
        "nodeType": "ImportDirective",
        "scope": 3477,
        "sourceUnit": 10971,
        "src": "56:52:13",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3238,
              "name": "AggregatorProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2049,
              "src": "582:15:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorProxy_$2049",
                "typeString": "contract AggregatorProxy"
              }
            },
            "id": 3239,
            "nodeType": "InheritanceSpecifier",
            "src": "582:15:13"
          }
        ],
        "contractDependencies": [
          2049,
          7263,
          11018,
          11027,
          11073
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3237,
          "nodeType": "StructuredDocumentation",
          "src": "110:440:13",
          "text": "@title External Access Controlled Aggregator Proxy\n@notice A trusted proxy for updating where current answers are read from\n@notice This contract provides a consistent address for the\nAggregator and AggregatorV3Interface but delegates where it reads from to the owner, who is\ntrusted to update it.\n@notice Only access enabled addresses are allowed to access getters for\naggregated answers and round information."
        },
        "fullyImplemented": true,
        "id": 3476,
        "linearizedBaseContracts": [
          3476,
          2049,
          7263,
          11027,
          11073,
          11018
        ],
        "name": "EACAggregatorProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "bc43cbaf",
            "id": 3241,
            "mutability": "mutable",
            "name": "accessController",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3476,
            "src": "603:49:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AccessControllerInterface_$10970",
              "typeString": "contract AccessControllerInterface"
            },
            "typeName": {
              "contractScope": null,
              "id": 3240,
              "name": "AccessControllerInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10970,
              "src": "603:25:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AccessControllerInterface_$10970",
                "typeString": "contract AccessControllerInterface"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3255,
              "nodeType": "Block",
              "src": "775:43:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3252,
                        "name": "_accessController",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3245,
                        "src": "795:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3251,
                      "name": "setController",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3271,
                      "src": "781:13:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "781:32:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3254,
                  "nodeType": "ExpressionStatement",
                  "src": "781:32:13"
                }
              ]
            },
            "documentation": null,
            "id": 3256,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3248,
                    "name": "_aggregator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3243,
                    "src": "760:11:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3249,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3247,
                  "name": "AggregatorProxy",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2049,
                  "src": "744:15:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_AggregatorProxy_$2049_$",
                    "typeString": "type(contract AggregatorProxy)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "744:28:13"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3243,
                  "mutability": "mutable",
                  "name": "_aggregator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3256,
                  "src": "674:19:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3242,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "674:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3245,
                  "mutability": "mutable",
                  "name": "_accessController",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3256,
                  "src": "699:25:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "699:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "668:60:13"
            },
            "returnParameters": {
              "id": 3250,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "775:0:13"
            },
            "scope": 3476,
            "src": "657:161:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3270,
              "nodeType": "Block",
              "src": "1072:74:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3264,
                      "name": "accessController",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3241,
                      "src": "1078:16:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AccessControllerInterface_$10970",
                        "typeString": "contract AccessControllerInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3266,
                          "name": "_accessController",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3259,
                          "src": "1123:17:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3265,
                        "name": "AccessControllerInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10970,
                        "src": "1097:25:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AccessControllerInterface_$10970_$",
                          "typeString": "type(contract AccessControllerInterface)"
                        }
                      },
                      "id": 3267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1097:44:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AccessControllerInterface_$10970",
                        "typeString": "contract AccessControllerInterface"
                      }
                    },
                    "src": "1078:63:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AccessControllerInterface_$10970",
                      "typeString": "contract AccessControllerInterface"
                    }
                  },
                  "id": 3269,
                  "nodeType": "ExpressionStatement",
                  "src": "1078:63:13"
                }
              ]
            },
            "documentation": {
              "id": 3257,
              "nodeType": "StructuredDocumentation",
              "src": "822:168:13",
              "text": "@notice Allows the owner to update the accessController contract address.\n@param _accessController The new address for the accessController contract"
            },
            "functionSelector": "92eefe9b",
            "id": 3271,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3262,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3261,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7262,
                  "src": "1058:9:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1058:11:13"
              }
            ],
            "name": "setController",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3259,
                  "mutability": "mutable",
                  "name": "_accessController",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3271,
                  "src": "1016:25:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3258,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1016:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1015:27:13"
            },
            "returnParameters": {
              "id": 3263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1072:0:13"
            },
            "scope": 3476,
            "src": "993:153:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1528
            ],
            "body": {
              "id": 3284,
              "nodeType": "Block",
              "src": "1691:38:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3280,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1704:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_EACAggregatorProxy_$3476",
                          "typeString": "contract super EACAggregatorProxy"
                        }
                      },
                      "id": 3281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestAnswer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1528,
                      "src": "1704:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$",
                        "typeString": "function () view returns (int256)"
                      }
                    },
                    "id": 3282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1704:20:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 3279,
                  "id": 3283,
                  "nodeType": "Return",
                  "src": "1697:27:13"
                }
              ]
            },
            "documentation": {
              "id": 3272,
              "nodeType": "StructuredDocumentation",
              "src": "1150:440:13",
              "text": "@notice Reads the current answer from aggregator delegated to.\n@dev overridden function to add the checkAccess() modifier\n   * @dev #[deprecated] Use latestRoundData instead. This does not error if no\nanswer has been reached, it will simply return 0. Either wait to point to\nan already answered Aggregator or use the recommended latestRoundData\ninstead which includes better verification information."
            },
            "functionSelector": "50d25bcd",
            "id": 3285,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3276,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3275,
                  "name": "checkAccess",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3475,
                  "src": "1654:11:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1654:13:13"
              }
            ],
            "name": "latestAnswer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3274,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1641:8:13"
            },
            "parameters": {
              "id": 3273,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1614:2:13"
            },
            "returnParameters": {
              "id": 3279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3278,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3285,
                  "src": "1681:6:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 3277,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1681:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1680:8:13"
            },
            "scope": 3476,
            "src": "1593:136:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1541
            ],
            "body": {
              "id": 3298,
              "nodeType": "Block",
              "src": "2350:41:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3294,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2363:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_EACAggregatorProxy_$3476",
                          "typeString": "contract super EACAggregatorProxy"
                        }
                      },
                      "id": 3295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1541,
                      "src": "2363:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 3296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2363:23:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3293,
                  "id": 3297,
                  "nodeType": "Return",
                  "src": "2356:30:13"
                }
              ]
            },
            "documentation": {
              "id": 3286,
              "nodeType": "StructuredDocumentation",
              "src": "1733:512:13",
              "text": "@notice get the latest completed round where the answer was updated. This\nID includes the proxy's phase, to make sure round IDs increase even when\nswitching to a newly deployed aggregator.\n   * @dev #[deprecated] Use latestRoundData instead. This does not error if no\nanswer has been reached, it will simply return 0. Either wait to point to\nan already answered Aggregator or use the recommended latestRoundData\ninstead which includes better verification information."
            },
            "functionSelector": "8205bf6a",
            "id": 3299,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3290,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3289,
                  "name": "checkAccess",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3475,
                  "src": "2312:11:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2312:13:13"
              }
            ],
            "name": "latestTimestamp",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3288,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2299:8:13"
            },
            "parameters": {
              "id": 3287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2272:2:13"
            },
            "returnParameters": {
              "id": 3293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3292,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3299,
                  "src": "2339:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3291,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2339:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2338:9:13"
            },
            "scope": 3476,
            "src": "2248:143:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1588
            ],
            "body": {
              "id": 3315,
              "nodeType": "Block",
              "src": "2978:43:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3312,
                        "name": "_roundId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3302,
                        "src": "3007:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3310,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2991:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_EACAggregatorProxy_$3476",
                          "typeString": "contract super EACAggregatorProxy"
                        }
                      },
                      "id": 3311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAnswer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1588,
                      "src": "2991:15:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_int256_$",
                        "typeString": "function (uint256) view returns (int256)"
                      }
                    },
                    "id": 3313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2991:25:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 3309,
                  "id": 3314,
                  "nodeType": "Return",
                  "src": "2984:32:13"
                }
              ]
            },
            "documentation": {
              "id": 3300,
              "nodeType": "StructuredDocumentation",
              "src": "2395:469:13",
              "text": "@notice get past rounds answers\n@param _roundId the answer number to retrieve the answer for\n@dev overridden function to add the checkAccess() modifier\n   * @dev #[deprecated] Use getRoundData instead. This does not error if no\nanswer has been reached, it will simply return 0. Either wait to point to\nan already answered Aggregator or use the recommended getRoundData\ninstead which includes better verification information."
            },
            "functionSelector": "b5ab58dc",
            "id": 3316,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3306,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3305,
                  "name": "checkAccess",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3475,
                  "src": "2941:11:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2941:13:13"
              }
            ],
            "name": "getAnswer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3304,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2928:8:13"
            },
            "parameters": {
              "id": 3303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3302,
                  "mutability": "mutable",
                  "name": "_roundId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3316,
                  "src": "2886:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2886:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2885:18:13"
            },
            "returnParameters": {
              "id": 3309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3308,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3316,
                  "src": "2968:6:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 3307,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2968:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2967:8:13"
            },
            "scope": 3476,
            "src": "2867:154:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1635
            ],
            "body": {
              "id": 3332,
              "nodeType": "Block",
              "src": "3651:46:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3329,
                        "name": "_roundId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3319,
                        "src": "3683:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3327,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3664:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_EACAggregatorProxy_$3476",
                          "typeString": "contract super EACAggregatorProxy"
                        }
                      },
                      "id": 3328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1635,
                      "src": "3664:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 3330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3664:28:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3326,
                  "id": 3331,
                  "nodeType": "Return",
                  "src": "3657:35:13"
                }
              ]
            },
            "documentation": {
              "id": 3317,
              "nodeType": "StructuredDocumentation",
              "src": "3025:508:13",
              "text": "@notice get block timestamp when an answer was last updated\n@param _roundId the answer number to retrieve the updated timestamp for\n@dev overridden function to add the checkAccess() modifier\n   * @dev #[deprecated] Use getRoundData instead. This does not error if no\nanswer has been reached, it will simply return 0. Either wait to point to\nan already answered Aggregator or use the recommended getRoundData\ninstead which includes better verification information."
            },
            "functionSelector": "b633620c",
            "id": 3333,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3323,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3322,
                  "name": "checkAccess",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3475,
                  "src": "3613:11:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3613:13:13"
              }
            ],
            "name": "getTimestamp",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3321,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3600:8:13"
            },
            "parameters": {
              "id": 3320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3319,
                  "mutability": "mutable",
                  "name": "_roundId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3333,
                  "src": "3558:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3558:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3557:18:13"
            },
            "returnParameters": {
              "id": 3326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3325,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3333,
                  "src": "3640:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3324,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3640:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3639:9:13"
            },
            "scope": 3476,
            "src": "3536:161:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1659
            ],
            "body": {
              "id": 3346,
              "nodeType": "Block",
              "src": "4247:37:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3342,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "4260:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_EACAggregatorProxy_$3476",
                          "typeString": "contract super EACAggregatorProxy"
                        }
                      },
                      "id": 3343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRound",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1659,
                      "src": "4260:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 3344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4260:19:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3341,
                  "id": 3345,
                  "nodeType": "Return",
                  "src": "4253:26:13"
                }
              ]
            },
            "documentation": {
              "id": 3334,
              "nodeType": "StructuredDocumentation",
              "src": "3701:445:13",
              "text": "@notice get the latest completed round where the answer was updated\n@dev overridden function to add the checkAccess() modifier\n   * @dev #[deprecated] Use latestRoundData instead. This does not error if no\nanswer has been reached, it will simply return 0. Either wait to point to\nan already answered Aggregator or use the recommended latestRoundData\ninstead which includes better verification information."
            },
            "functionSelector": "668a0f02",
            "id": 3347,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3338,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3337,
                  "name": "checkAccess",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3475,
                  "src": "4209:11:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4209:13:13"
              }
            ],
            "name": "latestRound",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3336,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4196:8:13"
            },
            "parameters": {
              "id": 3335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4169:2:13"
            },
            "returnParameters": {
              "id": 3341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3340,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3347,
                  "src": "4236:7:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3339,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4236:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4235:9:13"
            },
            "scope": 3476,
            "src": "4149:135:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1711
            ],
            "body": {
              "id": 3371,
              "nodeType": "Block",
              "src": "5831:46:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3368,
                        "name": "_roundId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3350,
                        "src": "5863:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3366,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "5844:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_EACAggregatorProxy_$3476",
                          "typeString": "contract super EACAggregatorProxy"
                        }
                      },
                      "id": 3367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1711,
                      "src": "5844:18:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint80_$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function (uint80) view returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 3369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5844:28:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "functionReturnParameters": 3365,
                  "id": 3370,
                  "nodeType": "Return",
                  "src": "5837:35:13"
                }
              ]
            },
            "documentation": {
              "id": 3348,
              "nodeType": "StructuredDocumentation",
              "src": "4288:1306:13",
              "text": "@notice get data about a round. Consumers are encouraged to check\nthat they're receiving fresh data by inspecting the updatedAt and\nansweredInRound return values.\nNote that different underlying implementations of AggregatorV3Interface\nhave slightly different semantics for some of the return values. Consumers\nshould determine what implementations they expect to receive\ndata from and validate that they can properly handle return data from all\nof them.\n@param _roundId the round ID to retrieve the round data for\n@return roundId is the round ID from the aggregator for which the data was\nretrieved combined with a phase to ensure that round IDs get larger as\ntime moves forward.\n@return answer is the answer for the given round\n@return startedAt is the timestamp when the round was started.\n(Only some AggregatorV3Interface implementations return meaningful values)\n@return updatedAt is the timestamp when the round last was updated (i.e.\nanswer was last computed)\n@return answeredInRound is the round ID of the round in which the answer\nwas computed.\n(Only some AggregatorV3Interface implementations return meaningful values)\n@dev Note that answer and updatedAt may change between queries."
            },
            "functionSelector": "9a6fc8f5",
            "id": 3372,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3353,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3352,
                  "name": "checkAccess",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3475,
                  "src": "5660:11:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5660:13:13"
              }
            ],
            "name": "getRoundData",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3354,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5678:8:13"
            },
            "parameters": {
              "id": 3351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3350,
                  "mutability": "mutable",
                  "name": "_roundId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3372,
                  "src": "5619:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 3349,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "5619:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5618:17:13"
            },
            "returnParameters": {
              "id": 3365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3356,
                  "mutability": "mutable",
                  "name": "roundId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3372,
                  "src": "5707:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 3355,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "5707:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3358,
                  "mutability": "mutable",
                  "name": "answer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3372,
                  "src": "5729:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 3357,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5729:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3360,
                  "mutability": "mutable",
                  "name": "startedAt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3372,
                  "src": "5750:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3359,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5750:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3362,
                  "mutability": "mutable",
                  "name": "updatedAt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3372,
                  "src": "5775:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3361,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5775:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3364,
                  "mutability": "mutable",
                  "name": "answeredInRound",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3372,
                  "src": "5800:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 3363,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "5800:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5699:129:13"
            },
            "scope": 3476,
            "src": "5597:280:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1756
            ],
            "body": {
              "id": 3393,
              "nodeType": "Block",
              "src": "7356:41:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3389,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "7369:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_EACAggregatorProxy_$3476",
                          "typeString": "contract super EACAggregatorProxy"
                        }
                      },
                      "id": 3390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1756,
                      "src": "7369:21:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 3391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7369:23:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "functionReturnParameters": 3388,
                  "id": 3392,
                  "nodeType": "Return",
                  "src": "7362:30:13"
                }
              ]
            },
            "documentation": {
              "id": 3373,
              "nodeType": "StructuredDocumentation",
              "src": "5881:1250:13",
              "text": "@notice get data about the latest round. Consumers are encouraged to check\nthat they're receiving fresh data by inspecting the updatedAt and\nansweredInRound return values.\nNote that different underlying implementations of AggregatorV3Interface\nhave slightly different semantics for some of the return values. Consumers\nshould determine what implementations they expect to receive\ndata from and validate that they can properly handle return data from all\nof them.\n@return roundId is the round ID from the aggregator for which the data was\nretrieved combined with a phase to ensure that round IDs get larger as\ntime moves forward.\n@return answer is the answer for the given round\n@return startedAt is the timestamp when the round was started.\n(Only some AggregatorV3Interface implementations return meaningful values)\n@return updatedAt is the timestamp when the round last was updated (i.e.\nanswer was last computed)\n@return answeredInRound is the round ID of the round in which the answer\nwas computed.\n(Only some AggregatorV3Interface implementations return meaningful values)\n@dev Note that answer and updatedAt may change between queries."
            },
            "functionSelector": "feaf968c",
            "id": 3394,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3376,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3375,
                  "name": "checkAccess",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3475,
                  "src": "7185:11:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7185:13:13"
              }
            ],
            "name": "latestRoundData",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3377,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7203:8:13"
            },
            "parameters": {
              "id": 3374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7158:2:13"
            },
            "returnParameters": {
              "id": 3388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3379,
                  "mutability": "mutable",
                  "name": "roundId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3394,
                  "src": "7232:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 3378,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "7232:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3381,
                  "mutability": "mutable",
                  "name": "answer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3394,
                  "src": "7254:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 3380,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7254:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3383,
                  "mutability": "mutable",
                  "name": "startedAt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3394,
                  "src": "7275:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3382,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7275:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3385,
                  "mutability": "mutable",
                  "name": "updatedAt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3394,
                  "src": "7300:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3384,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7300:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3387,
                  "mutability": "mutable",
                  "name": "answeredInRound",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3394,
                  "src": "7325:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 3386,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "7325:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7224:129:13"
            },
            "scope": 3476,
            "src": "7134:263:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1780
            ],
            "body": {
              "id": 3420,
              "nodeType": "Block",
              "src": "8274:54:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3417,
                        "name": "_roundId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3397,
                        "src": "8314:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint80",
                          "typeString": "uint80"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3415,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8287:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_EACAggregatorProxy_$3476",
                          "typeString": "contract super EACAggregatorProxy"
                        }
                      },
                      "id": 3416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proposedGetRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1780,
                      "src": "8287:26:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint80_$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function (uint80) view returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 3418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8287:36:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "functionReturnParameters": 3414,
                  "id": 3419,
                  "nodeType": "Return",
                  "src": "8280:43:13"
                }
              ]
            },
            "documentation": {
              "id": 3395,
              "nodeType": "StructuredDocumentation",
              "src": "7401:610:13",
              "text": "@notice Used if an aggregator contract has been proposed.\n@param _roundId the round ID to retrieve the round data for\n@return roundId is the round ID for which data was retrieved\n@return answer is the answer for the given round\n@return startedAt is the timestamp when the round was started.\n(Only some AggregatorV3Interface implementations return meaningful values)\n@return updatedAt is the timestamp when the round last was updated (i.e.\nanswer was last computed)\n@return answeredInRound is the round ID of the round in which the answer\nwas computed."
            },
            "functionSelector": "6001ac53",
            "id": 3421,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3400,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3399,
                  "name": "checkAccess",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3475,
                  "src": "8085:11:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8085:13:13"
              },
              {
                "arguments": [],
                "id": 3402,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3401,
                  "name": "hasProposal",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2048,
                  "src": "8103:11:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8103:13:13"
              }
            ],
            "name": "proposedGetRoundData",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3403,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8121:8:13"
            },
            "parameters": {
              "id": 3398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3397,
                  "mutability": "mutable",
                  "name": "_roundId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3421,
                  "src": "8044:15:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 3396,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "8044:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8043:17:13"
            },
            "returnParameters": {
              "id": 3414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3405,
                  "mutability": "mutable",
                  "name": "roundId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3421,
                  "src": "8150:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 3404,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "8150:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3407,
                  "mutability": "mutable",
                  "name": "answer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3421,
                  "src": "8172:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 3406,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8172:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3409,
                  "mutability": "mutable",
                  "name": "startedAt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3421,
                  "src": "8193:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3408,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8193:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3411,
                  "mutability": "mutable",
                  "name": "updatedAt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3421,
                  "src": "8218:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3410,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8218:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3413,
                  "mutability": "mutable",
                  "name": "answeredInRound",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3421,
                  "src": "8243:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 3412,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "8243:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8142:129:13"
            },
            "scope": 3476,
            "src": "8014:314:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1801
            ],
            "body": {
              "id": 3444,
              "nodeType": "Block",
              "src": "9128:49:13",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3440,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "9141:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_EACAggregatorProxy_$3476",
                          "typeString": "contract super EACAggregatorProxy"
                        }
                      },
                      "id": 3441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "proposedLatestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1801,
                      "src": "9141:29:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 3442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9141:31:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "functionReturnParameters": 3439,
                  "id": 3443,
                  "nodeType": "Return",
                  "src": "9134:38:13"
                }
              ]
            },
            "documentation": {
              "id": 3422,
              "nodeType": "StructuredDocumentation",
              "src": "8332:545:13",
              "text": "@notice Used if an aggregator contract has been proposed.\n@return roundId is the round ID for which data was retrieved\n@return answer is the answer for the given round\n@return startedAt is the timestamp when the round was started.\n(Only some AggregatorV3Interface implementations return meaningful values)\n@return updatedAt is the timestamp when the round last was updated (i.e.\nanswer was last computed)\n@return answeredInRound is the round ID of the round in which the answer\nwas computed."
            },
            "functionSelector": "8f6b4d91",
            "id": 3445,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3425,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3424,
                  "name": "checkAccess",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3475,
                  "src": "8939:11:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8939:13:13"
              },
              {
                "arguments": [],
                "id": 3427,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3426,
                  "name": "hasProposal",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2048,
                  "src": "8957:11:13",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8957:13:13"
              }
            ],
            "name": "proposedLatestRoundData",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3428,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8975:8:13"
            },
            "parameters": {
              "id": 3423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8912:2:13"
            },
            "returnParameters": {
              "id": 3439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3430,
                  "mutability": "mutable",
                  "name": "roundId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3445,
                  "src": "9004:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 3429,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "9004:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3432,
                  "mutability": "mutable",
                  "name": "answer",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3445,
                  "src": "9026:13:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 3431,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9026:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3434,
                  "mutability": "mutable",
                  "name": "startedAt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3445,
                  "src": "9047:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9047:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3436,
                  "mutability": "mutable",
                  "name": "updatedAt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3445,
                  "src": "9072:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9072:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3438,
                  "mutability": "mutable",
                  "name": "answeredInRound",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3445,
                  "src": "9097:22:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint80",
                    "typeString": "uint80"
                  },
                  "typeName": {
                    "id": 3437,
                    "name": "uint80",
                    "nodeType": "ElementaryTypeName",
                    "src": "9097:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint80",
                      "typeString": "uint80"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8996:129:13"
            },
            "scope": 3476,
            "src": "8880:297:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3474,
              "nodeType": "Block",
              "src": "9334:156:13",
              "statements": [
                {
                  "assignments": [
                    3449
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3449,
                      "mutability": "mutable",
                      "name": "ac",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3474,
                      "src": "9340:28:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AccessControllerInterface_$10970",
                        "typeString": "contract AccessControllerInterface"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 3448,
                        "name": "AccessControllerInterface",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 10970,
                        "src": "9340:25:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AccessControllerInterface_$10970",
                          "typeString": "contract AccessControllerInterface"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3451,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 3450,
                    "name": "accessController",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3241,
                    "src": "9371:16:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AccessControllerInterface_$10970",
                      "typeString": "contract AccessControllerInterface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9340:47:13"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3455,
                                "name": "ac",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3449,
                                "src": "9409:2:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AccessControllerInterface_$10970",
                                  "typeString": "contract AccessControllerInterface"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AccessControllerInterface_$10970",
                                  "typeString": "contract AccessControllerInterface"
                                }
                              ],
                              "id": 3454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9401:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3453,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9401:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 3456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9401:11:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 3459,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9424:1:13",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 3458,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9416:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3457,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9416:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 3460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9416:10:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "9401:25:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3464,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9443:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3465,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "9443:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3466,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9455:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "data",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "9455:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3462,
                              "name": "ac",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3449,
                              "src": "9430:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AccessControllerInterface_$10970",
                                "typeString": "contract AccessControllerInterface"
                              }
                            },
                            "id": 3463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "hasAccess",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10969,
                            "src": "9430:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (address,bytes memory) view external returns (bool)"
                            }
                          },
                          "id": 3468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9430:34:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9401:63:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f20616363657373",
                        "id": 3470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9466:11:13",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87589d3e364d25220f4fcbb8f43a8d72cb8377e2d18fa62010b1c9b009ed9815",
                          "typeString": "literal_string \"No access\""
                        },
                        "value": "No access"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87589d3e364d25220f4fcbb8f43a8d72cb8377e2d18fa62010b1c9b009ed9815",
                          "typeString": "literal_string \"No access\""
                        }
                      ],
                      "id": 3452,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9393:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9393:85:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3472,
                  "nodeType": "ExpressionStatement",
                  "src": "9393:85:13"
                },
                {
                  "id": 3473,
                  "nodeType": "PlaceholderStatement",
                  "src": "9484:1:13"
                }
              ]
            },
            "documentation": {
              "id": 3446,
              "nodeType": "StructuredDocumentation",
              "src": "9181:127:13",
              "text": "@dev reverts if the caller does not have access by the accessController\ncontract or is the contract itself."
            },
            "id": 3475,
            "name": "checkAccess",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 3447,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9331:2:13"
            },
            "src": "9311:179:13",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3477,
        "src": "551:8941:13"
      }
    ],
    "src": "0:9493:13"
  },
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620034fe380380620034fe833981810160405260408110156200003757600080fd5b81019080805190602001909291908051906020019092919050505081336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000a481620000be60201b60201c565b50620000b681620001d560201b60201c565b5050620002dc565b60006001600260000160009054906101000a900461ffff1601905060405180604001604052808261ffff1681526020018373ffffffffffffffffffffffffffffffffffffffff16815250600260008201518160000160006101000a81548161ffff021916908361ffff16021790555060208201518160000160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505081600460008361ffff1661ffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161462000298576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000081525060200191505060405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61321280620002ec6000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80638f6b4d91116100c3578063bc43cbaf1161007c578063bc43cbaf146105df578063c159730414610629578063e8c4be301461069b578063f2fde38b146106e5578063f8a2abd314610729578063feaf968c1461076d5761014d565b80638f6b4d91146103cf57806392eefe9b146104395780639a6fc8f51461047d578063a928c09614610517578063b5ab58dc1461055b578063b633620c1461059d5761014d565b80636001ac53116101155780636001ac5314610222578063668a0f02146102bc5780637284e416146102da57806379ba50971461035d5780638205bf6a146103675780638da5cb5b146103855761014d565b8063245a7bfc14610152578063313ce5671461019c57806350d25bcd146101c057806354fd4d50146101de57806358303b10146101fc575b600080fd5b61015a6107d7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101a4610804565b604051808260ff1660ff16815260200191505060405180910390f35b6101c86108b1565b6040518082815260200191505060405180910390f35b6101e6610a7d565b6040518082815260200191505060405180910390f35b610204610b2a565b604051808261ffff1661ffff16815260200191505060405180910390f35b61025a6004803603602081101561023857600080fd5b81019080803569ffffffffffffffffffff169060200190929190505050610b45565b604051808669ffffffffffffffffffff1669ffffffffffffffffffff1681526020018581526020018481526020018381526020018269ffffffffffffffffffff1669ffffffffffffffffffff1681526020019550505050505060405180910390f35b6102c4610deb565b6040518082815260200191505060405180910390f35b6102e2610fb7565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610322578082015181840152602081019050610307565b50505050905090810190601f16801561034f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610365611122565b005b61036f6112ea565b6040518082815260200191505060405180910390f35b61038d6114b6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103d76114db565b604051808669ffffffffffffffffffff1669ffffffffffffffffffff1681526020018581526020018481526020018381526020018269ffffffffffffffffffff1669ffffffffffffffffffff1681526020019550505050505060405180910390f35b61047b6004803603602081101561044f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061177e565b005b6104b56004803603602081101561049357600080fd5b81019080803569ffffffffffffffffffff169060200190929190505050611884565b604051808669ffffffffffffffffffff1669ffffffffffffffffffff1681526020018581526020018481526020018381526020018269ffffffffffffffffffff1669ffffffffffffffffffff1681526020019550505050505060405180910390f35b6105596004803603602081101561052d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a65565b005b6105876004803603602081101561057157600080fd5b8101908080359060200190929190505050611c1b565b6040518082815260200191505060405180910390f35b6105c9600480360360208110156105b357600080fd5b8101908080359060200190929190505050611dea565b6040518082815260200191505060405180910390f35b6105e7611fb9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106596004803603602081101561063f57600080fd5b81019080803561ffff169060200190929190505050611fdf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106a3612012565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610727600480360360208110156106fb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612038565b005b61076b6004803603602081101561073f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506121b9565b005b6107756122bf565b604051808669ffffffffffffffffffff1669ffffffffffffffffffff1681526020018581526020018481526020018381526020018269ffffffffffffffffffff1669ffffffffffffffffffff1681526020019550505050505060405180910390f35b6000600260000160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260000160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561087157600080fd5b505afa158015610885573d6000803e3d6000fd5b505050506040513d602081101561089b57600080fd5b8101908080519060200190929190505050905090565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806109fd57508073ffffffffffffffffffffffffffffffffffffffff16636b14daf8336000366040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060206040518083038186803b1580156109c157600080fd5b505afa1580156109d5573d6000803e3d6000fd5b505050506040513d60208110156109eb57600080fd5b81019080805190602001909291905050505b610a6f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f20616363657373000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b610a7761249d565b91505090565b6000600260000160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b158015610aea57600080fd5b505afa158015610afe573d6000803e3d6000fd5b505050506040513d6020811015610b1457600080fd5b8101908080519060200190929190505050905090565b6000600260000160009054906101000a900461ffff16905090565b600080600080600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610c9757508073ffffffffffffffffffffffffffffffffffffffff16636b14daf8336000366040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060206040518083038186803b158015610c5b57600080fd5b505afa158015610c6f573d6000803e3d6000fd5b505050506040513d6020811015610c8557600080fd5b81019080805190602001909291905050505b610d09576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f20616363657373000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610dce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f4e6f2070726f706f7365642061676772656761746f722070726573656e74000081525060200191505060405180910390fd5b610dd78761254a565b955095509550955095505091939590929450565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610f3757508073ffffffffffffffffffffffffffffffffffffffff16636b14daf8336000366040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060206040518083038186803b158015610efb57600080fd5b505afa158015610f0f573d6000803e3d6000fd5b505050506040513d6020811015610f2557600080fd5b81019080805190602001909291905050505b610fa9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f20616363657373000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b610fb1612717565b91505090565b6060600260000160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637284e4166040518163ffffffff1660e01b815260040160006040518083038186803b15801561102457600080fd5b505afa158015611038573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561106257600080fd5b810190808051604051939291908464010000000082111561108257600080fd5b8382019150602082018581111561109857600080fd5b82518660018202830111640100000000821117156110b557600080fd5b8083526020830192505050908051906020019080838360005b838110156110e95780820151818401526020810190506110ce565b50505050905090810190601f1680156111165780820380516001836020036101000a031916815260200191505b50604052505050905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4d7573742062652070726f706f736564206f776e65720000000000000000000081525060200191505060405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061143657508073ffffffffffffffffffffffffffffffffffffffff16636b14daf8336000366040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060206040518083038186803b1580156113fa57600080fd5b505afa15801561140e573d6000803e3d6000fd5b505050506040513d602081101561142457600080fd5b81019080805190602001909291905050505b6114a8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f20616363657373000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6114b061284a565b91505090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600080600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061162d57508073ffffffffffffffffffffffffffffffffffffffff16636b14daf8336000366040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060206040518083038186803b1580156115f157600080fd5b505afa158015611605573d6000803e3d6000fd5b505050506040513d602081101561161b57600080fd5b81019080805190602001909291905050505b61169f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f20616363657373000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611764576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f4e6f2070726f706f7365642061676772656761746f722070726573656e74000081525060200191505060405180910390fd5b61176c6128f7565b95509550955095509550509091929394565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611840576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000081525060200191505060405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600080600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806119d657508073ffffffffffffffffffffffffffffffffffffffff16636b14daf8336000366040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060206040518083038186803b15801561199a57600080fd5b505afa1580156119ae573d6000803e3d6000fd5b505050506040513d60208110156119c457600080fd5b81019080805190602001909291905050505b611a48576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f20616363657373000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b611a5187612a9f565b955095509550955095505091939590929450565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611b27576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000081525060200191505060405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611bea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f496e76616c69642070726f706f7365642061676772656761746f72000000000081525060200191505060405180910390fd5b600360006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055611c1881612c02565b50565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480611d6757508073ffffffffffffffffffffffffffffffffffffffff16636b14daf8336000366040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060206040518083038186803b158015611d2b57600080fd5b505afa158015611d3f573d6000803e3d6000fd5b505050506040513d6020811015611d5557600080fd5b81019080805190602001909291905050505b611dd9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f20616363657373000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b611de283612d19565b915050919050565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480611f3657508073ffffffffffffffffffffffffffffffffffffffff16636b14daf8336000366040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060206040518083038186803b158015611efa57600080fd5b505afa158015611f0e573d6000803e3d6000fd5b505050506040513d6020811015611f2457600080fd5b81019080805190602001909291905050505b611fa8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f20616363657373000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b611fb183612e68565b915050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146120fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461227b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000081525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600080600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061241157508073ffffffffffffffffffffffffffffffffffffffff16636b14daf8336000366040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060206040518083038186803b1580156123d557600080fd5b505afa1580156123e9573d6000803e3d6000fd5b505050506040513d60208110156123ff57600080fd5b81019080805190602001909291905050505b612483576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f20616363657373000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b61248b612fb7565b95509550955095509550509091929394565b6000600260000160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561250a57600080fd5b505afa15801561251e573d6000803e3d6000fd5b505050506040513d602081101561253457600080fd5b8101908080519060200190929190505050905090565b60008060008060008073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f4e6f2070726f706f7365642061676772656761746f722070726573656e74000081525060200191505060405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639a6fc8f5876040518263ffffffff1660e01b8152600401808269ffffffffffffffffffff1669ffffffffffffffffffff16815260200191505060a06040518083038186803b1580156126a157600080fd5b505afa1580156126b5573d6000803e3d6000fd5b505050506040513d60a08110156126cb57600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050509450945094509450945091939590929450565b60006127216131a8565b60026040518060400160405290816000820160009054906101000a900461ffff1661ffff1661ffff1681526020016000820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506128388160000151826020015173ffffffffffffffffffffffffffffffffffffffff1663668a0f026040518163ffffffff1660e01b815260040160206040518083038186803b1580156127f857600080fd5b505afa15801561280c573d6000803e3d6000fd5b505050506040513d602081101561282257600080fd5b8101908080519060200190929190505050613134565b69ffffffffffffffffffff1691505090565b6000600260000160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638205bf6a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156128b757600080fd5b505afa1580156128cb573d6000803e3d6000fd5b505050506040513d60208110156128e157600080fd5b8101908080519060200190929190505050905090565b60008060008060008073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156129c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f4e6f2070726f706f7365642061676772656761746f722070726573656e74000081525060200191505060405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015612a2b57600080fd5b505afa158015612a3f573d6000803e3d6000fd5b505050506040513d60a0811015612a5557600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050945094509450945094509091929394565b6000806000806000806000612abf8869ffffffffffffffffffff16613153565b915091506000806000806000600460008861ffff1661ffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639a6fc8f5876040518263ffffffff1660e01b8152600401808267ffffffffffffffff1669ffffffffffffffffffff16815260200191505060a06040518083038186803b158015612b6d57600080fd5b505afa158015612b81573d6000803e3d6000fd5b505050506040513d60a0811015612b9757600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919050505094509450945094509450612be885858585858c613171565b9b509b509b509b509b505050505050505091939590929450565b60006001600260000160009054906101000a900461ffff1601905060405180604001604052808261ffff1681526020018373ffffffffffffffffffffffffffffffffffffffff16815250600260008201518160000160006101000a81548161ffff021916908361ffff16021790555060208201518160000160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505081600460008361ffff1661ffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60006001601060400160020a03821115612d365760009050612e63565b600080612d4284613153565b915091506000600460008461ffff1661ffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612dc75760009350505050612e63565b8073ffffffffffffffffffffffffffffffffffffffff1663b5ab58dc836040518263ffffffff1660e01b8152600401808267ffffffffffffffff16815260200191505060206040518083038186803b158015612e2257600080fd5b505afa158015612e36573d6000803e3d6000fd5b505050506040513d6020811015612e4c57600080fd5b810190808051906020019092919050505093505050505b919050565b60006001601060400160020a03821115612e855760009050612fb2565b600080612e9184613153565b915091506000600460008461ffff1661ffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612f165760009350505050612fb2565b8073ffffffffffffffffffffffffffffffffffffffff1663b633620c836040518263ffffffff1660e01b8152600401808267ffffffffffffffff16815260200191505060206040518083038186803b158015612f7157600080fd5b505afa158015612f85573d6000803e3d6000fd5b505050506040513d6020811015612f9b57600080fd5b810190808051906020019092919050505093505050505b919050565b6000806000806000612fc76131a8565b60026040518060400160405290816000820160009054906101000a900461ffff1661ffff1661ffff1681526020016000820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000806000806000856020015173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561309e57600080fd5b505afa1580156130b2573d6000803e3d6000fd5b505050506040513d60a08110156130c857600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050509450945094509450945061311d85858585858b60000151613171565b9a509a509a509a509a505050505050509091929394565b60008167ffffffffffffffff1660408461ffff16901b17905092915050565b6000806000604084901c905060008490508181935093505050915091565b6000806000806000613183868c613134565b8a8a8a6131908a8c613134565b94509450945094509450965096509650965096915050565b6040518060400160405280600061ffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152509056fea2646970667358221220f677c5396e17888c7c130ce03c25dad3fa516e3d6fb6ef9e31b96f9519be9b4f64736f6c63430006060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061014d5760003560e01c80638f6b4d91116100c3578063bc43cbaf1161007c578063bc43cbaf146105df578063c159730414610629578063e8c4be301461069b578063f2fde38b146106e5578063f8a2abd314610729578063feaf968c1461076d5761014d565b80638f6b4d91146103cf57806392eefe9b146104395780639a6fc8f51461047d578063a928c09614610517578063b5ab58dc1461055b578063b633620c1461059d5761014d565b80636001ac53116101155780636001ac5314610222578063668a0f02146102bc5780637284e416146102da57806379ba50971461035d5780638205bf6a146103675780638da5cb5b146103855761014d565b8063245a7bfc14610152578063313ce5671461019c57806350d25bcd146101c057806354fd4d50146101de57806358303b10146101fc575b600080fd5b61015a6107d7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101a4610804565b604051808260ff1660ff16815260200191505060405180910390f35b6101c86108b1565b6040518082815260200191505060405180910390f35b6101e6610a7d565b6040518082815260200191505060405180910390f35b610204610b2a565b604051808261ffff1661ffff16815260200191505060405180910390f35b61025a6004803603602081101561023857600080fd5b81019080803569ffffffffffffffffffff169060200190929190505050610b45565b604051808669ffffffffffffffffffff1669ffffffffffffffffffff1681526020018581526020018481526020018381526020018269ffffffffffffffffffff1669ffffffffffffffffffff1681526020019550505050505060405180910390f35b6102c4610deb565b6040518082815260200191505060405180910390f35b6102e2610fb7565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610322578082015181840152602081019050610307565b50505050905090810190601f16801561034f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610365611122565b005b61036f6112ea565b6040518082815260200191505060405180910390f35b61038d6114b6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103d76114db565b604051808669ffffffffffffffffffff1669ffffffffffffffffffff1681526020018581526020018481526020018381526020018269ffffffffffffffffffff1669ffffffffffffffffffff1681526020019550505050505060405180910390f35b61047b6004803603602081101561044f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061177e565b005b6104b56004803603602081101561049357600080fd5b81019080803569ffffffffffffffffffff169060200190929190505050611884565b604051808669ffffffffffffffffffff1669ffffffffffffffffffff1681526020018581526020018481526020018381526020018269ffffffffffffffffffff1669ffffffffffffffffffff1681526020019550505050505060405180910390f35b6105596004803603602081101561052d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a65565b005b6105876004803603602081101561057157600080fd5b8101908080359060200190929190505050611c1b565b6040518082815260200191505060405180910390f35b6105c9600480360360208110156105b357600080fd5b8101908080359060200190929190505050611dea565b6040518082815260200191505060405180910390f35b6105e7611fb9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106596004803603602081101561063f57600080fd5b81019080803561ffff169060200190929190505050611fdf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6106a3612012565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610727600480360360208110156106fb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612038565b005b61076b6004803603602081101561073f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506121b9565b005b6107756122bf565b604051808669ffffffffffffffffffff1669ffffffffffffffffffff1681526020018581526020018481526020018381526020018269ffffffffffffffffffff1669ffffffffffffffffffff1681526020019550505050505060405180910390f35b6000600260000160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260000160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561087157600080fd5b505afa158015610885573d6000803e3d6000fd5b505050506040513d602081101561089b57600080fd5b8101908080519060200190929190505050905090565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806109fd57508073ffffffffffffffffffffffffffffffffffffffff16636b14daf8336000366040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060206040518083038186803b1580156109c157600080fd5b505afa1580156109d5573d6000803e3d6000fd5b505050506040513d60208110156109eb57600080fd5b81019080805190602001909291905050505b610a6f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f20616363657373000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b610a7761249d565b91505090565b6000600260000160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b158015610aea57600080fd5b505afa158015610afe573d6000803e3d6000fd5b505050506040513d6020811015610b1457600080fd5b8101908080519060200190929190505050905090565b6000600260000160009054906101000a900461ffff16905090565b600080600080600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610c9757508073ffffffffffffffffffffffffffffffffffffffff16636b14daf8336000366040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060206040518083038186803b158015610c5b57600080fd5b505afa158015610c6f573d6000803e3d6000fd5b505050506040513d6020811015610c8557600080fd5b81019080805190602001909291905050505b610d09576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f20616363657373000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610dce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f4e6f2070726f706f7365642061676772656761746f722070726573656e74000081525060200191505060405180910390fd5b610dd78761254a565b955095509550955095505091939590929450565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610f3757508073ffffffffffffffffffffffffffffffffffffffff16636b14daf8336000366040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060206040518083038186803b158015610efb57600080fd5b505afa158015610f0f573d6000803e3d6000fd5b505050506040513d6020811015610f2557600080fd5b81019080805190602001909291905050505b610fa9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f20616363657373000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b610fb1612717565b91505090565b6060600260000160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637284e4166040518163ffffffff1660e01b815260040160006040518083038186803b15801561102457600080fd5b505afa158015611038573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561106257600080fd5b810190808051604051939291908464010000000082111561108257600080fd5b8382019150602082018581111561109857600080fd5b82518660018202830111640100000000821117156110b557600080fd5b8083526020830192505050908051906020019080838360005b838110156110e95780820151818401526020810190506110ce565b50505050905090810190601f1680156111165780820380516001836020036101000a031916815260200191505b50604052505050905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4d7573742062652070726f706f736564206f776e65720000000000000000000081525060200191505060405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061143657508073ffffffffffffffffffffffffffffffffffffffff16636b14daf8336000366040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060206040518083038186803b1580156113fa57600080fd5b505afa15801561140e573d6000803e3d6000fd5b505050506040513d602081101561142457600080fd5b81019080805190602001909291905050505b6114a8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f20616363657373000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6114b061284a565b91505090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600080600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061162d57508073ffffffffffffffffffffffffffffffffffffffff16636b14daf8336000366040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060206040518083038186803b1580156115f157600080fd5b505afa158015611605573d6000803e3d6000fd5b505050506040513d602081101561161b57600080fd5b81019080805190602001909291905050505b61169f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f20616363657373000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611764576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f4e6f2070726f706f7365642061676772656761746f722070726573656e74000081525060200191505060405180910390fd5b61176c6128f7565b95509550955095509550509091929394565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611840576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000081525060200191505060405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600080600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806119d657508073ffffffffffffffffffffffffffffffffffffffff16636b14daf8336000366040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060206040518083038186803b15801561199a57600080fd5b505afa1580156119ae573d6000803e3d6000fd5b505050506040513d60208110156119c457600080fd5b81019080805190602001909291905050505b611a48576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f20616363657373000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b611a5187612a9f565b955095509550955095505091939590929450565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611b27576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000081525060200191505060405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611bea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f496e76616c69642070726f706f7365642061676772656761746f72000000000081525060200191505060405180910390fd5b600360006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055611c1881612c02565b50565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480611d6757508073ffffffffffffffffffffffffffffffffffffffff16636b14daf8336000366040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060206040518083038186803b158015611d2b57600080fd5b505afa158015611d3f573d6000803e3d6000fd5b505050506040513d6020811015611d5557600080fd5b81019080805190602001909291905050505b611dd9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f20616363657373000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b611de283612d19565b915050919050565b600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480611f3657508073ffffffffffffffffffffffffffffffffffffffff16636b14daf8336000366040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060206040518083038186803b158015611efa57600080fd5b505afa158015611f0e573d6000803e3d6000fd5b505050506040513d6020811015611f2457600080fd5b81019080805190602001909291905050505b611fa8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f20616363657373000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b611fb183612e68565b915050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146120fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000081525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461227b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000081525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080600080600080600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061241157508073ffffffffffffffffffffffffffffffffffffffff16636b14daf8336000366040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060206040518083038186803b1580156123d557600080fd5b505afa1580156123e9573d6000803e3d6000fd5b505050506040513d60208110156123ff57600080fd5b81019080805190602001909291905050505b612483576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f20616363657373000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b61248b612fb7565b95509550955095509550509091929394565b6000600260000160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561250a57600080fd5b505afa15801561251e573d6000803e3d6000fd5b505050506040513d602081101561253457600080fd5b8101908080519060200190929190505050905090565b60008060008060008073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f4e6f2070726f706f7365642061676772656761746f722070726573656e74000081525060200191505060405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639a6fc8f5876040518263ffffffff1660e01b8152600401808269ffffffffffffffffffff1669ffffffffffffffffffff16815260200191505060a06040518083038186803b1580156126a157600080fd5b505afa1580156126b5573d6000803e3d6000fd5b505050506040513d60a08110156126cb57600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050509450945094509450945091939590929450565b60006127216131a8565b60026040518060400160405290816000820160009054906101000a900461ffff1661ffff1661ffff1681526020016000820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506128388160000151826020015173ffffffffffffffffffffffffffffffffffffffff1663668a0f026040518163ffffffff1660e01b815260040160206040518083038186803b1580156127f857600080fd5b505afa15801561280c573d6000803e3d6000fd5b505050506040513d602081101561282257600080fd5b8101908080519060200190929190505050613134565b69ffffffffffffffffffff1691505090565b6000600260000160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638205bf6a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156128b757600080fd5b505afa1580156128cb573d6000803e3d6000fd5b505050506040513d60208110156128e157600080fd5b8101908080519060200190929190505050905090565b60008060008060008073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156129c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f4e6f2070726f706f7365642061676772656761746f722070726573656e74000081525060200191505060405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015612a2b57600080fd5b505afa158015612a3f573d6000803e3d6000fd5b505050506040513d60a0811015612a5557600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050945094509450945094509091929394565b6000806000806000806000612abf8869ffffffffffffffffffff16613153565b915091506000806000806000600460008861ffff1661ffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639a6fc8f5876040518263ffffffff1660e01b8152600401808267ffffffffffffffff1669ffffffffffffffffffff16815260200191505060a06040518083038186803b158015612b6d57600080fd5b505afa158015612b81573d6000803e3d6000fd5b505050506040513d60a0811015612b9757600080fd5b81019080805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919050505094509450945094509450612be885858585858c613171565b9b509b509b509b509b505050505050505091939590929450565b60006001600260000160009054906101000a900461ffff1601905060405180604001604052808261ffff1681526020018373ffffffffffffffffffffffffffffffffffffffff16815250600260008201518160000160006101000a81548161ffff021916908361ffff16021790555060208201518160000160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505081600460008361ffff1661ffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60006001601060400160020a03821115612d365760009050612e63565b600080612d4284613153565b915091506000600460008461ffff1661ffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612dc75760009350505050612e63565b8073ffffffffffffffffffffffffffffffffffffffff1663b5ab58dc836040518263ffffffff1660e01b8152600401808267ffffffffffffffff16815260200191505060206040518083038186803b158015612e2257600080fd5b505afa158015612e36573d6000803e3d6000fd5b505050506040513d6020811015612e4c57600080fd5b810190808051906020019092919050505093505050505b919050565b60006001601060400160020a03821115612e855760009050612fb2565b600080612e9184613153565b915091506000600460008461ffff1661ffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612f165760009350505050612fb2565b8073ffffffffffffffffffffffffffffffffffffffff1663b633620c836040518263ffffffff1660e01b8152600401808267ffffffffffffffff16815260200191505060206040518083038186803b158015612f7157600080fd5b505afa158015612f85573d6000803e3d6000fd5b505050506040513d6020811015612f9b57600080fd5b810190808051906020019092919050505093505050505b919050565b6000806000806000612fc76131a8565b60026040518060400160405290816000820160009054906101000a900461ffff1661ffff1661ffff1681526020016000820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506000806000806000856020015173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561309e57600080fd5b505afa1580156130b2573d6000803e3d6000fd5b505050506040513d60a08110156130c857600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050509450945094509450945061311d85858585858b60000151613171565b9a509a509a509a509a505050505050509091929394565b60008167ffffffffffffffff1660408461ffff16901b17905092915050565b6000806000604084901c905060008490508181935093505050915091565b6000806000806000613183868c613134565b8a8a8a6131908a8c613134565b94509450945094509450965096509650965096915050565b6040518060400160405280600061ffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152509056fea2646970667358221220f677c5396e17888c7c130ce03c25dad3fa516e3d6fb6ef9e31b96f9519be9b4f64736f6c63430006060033",
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang",
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "evmVersion": "petersburg"
  }
}
