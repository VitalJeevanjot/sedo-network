{
  "fileName": "BlockhashStoreTestHelper.sol",
  "contractName": "BlockhashStoreTestHelper",
  "source": "pragma solidity 0.6.6;\n\nimport \"../dev/BlockhashStore.sol\";\n\ncontract BlockhashStoreTestHelper is BlockhashStore {\n  function godmodeSetHash(uint256 n, bytes32 h) public {\n    s_blockhashes[n] = h;\n  }\n}\n",
  "sourcePath": "contracts/chainlink_contracts/chainlink/tests/BlockhashStoreTestHelper.sol",
  "sourceMap": "61:142:47:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;61:142:47;;;;;;;",
  "deployedSourceMap": "61:142:47:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;61:142:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;767:140:30;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;767:140:30;;;;;;;;;;;;;;;;;:::i;:::-;;1011:70;;;:::i;:::-;;117:84:47;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;117:84:47;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2832:173:30;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2832:173:30;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1451:1202;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1451:1202:30;;;;;;;;;;;;;;;;;;;27:11:-1;14;11:28;8:2;;;52:1;49;42:12;8:2;1451:1202:30;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;1451:1202:30;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1451:1202:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1451:1202:30;;;;;;;;;;;;;;;:::i;:::-;;767:140;806:9;828:1;818:12;806:24;;849:3;844:8;;:1;:8;;836:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;901:1;882:13;:16;896:1;882:16;;;;;;;;;;;:20;;;;767:140;;:::o;1011:70::-;1051:25;1072:3;1057:12;:18;1051:5;:25::i;:::-;1011:70::o;117:84:47:-;195:1;176:13;:16;190:1;176:16;;;;;;;;;;;:20;;;;117:84;;:::o;2832:173:30:-;2888:7;2903:9;2915:13;:16;2929:1;2915:16;;;;;;;;;;;;2903:28;;2950:3;2945:8;;:1;:8;;2937:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2999:1;2992:8;;;2832:173;;;:::o;1451:1202::-;1552:13;:20;1570:1;1566;:5;1552:20;;;;;;;;;;;;1541:6;1531:17;;;;;;:41;1523:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2376:18;2449:2;2441:6;2437:15;2431:22;2417:36;;2638:10;2619:13;:16;2633:1;2619:16;;;;;;;;;;;:29;;;;1451:1202;;;:::o",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "n",
          "type": "uint256"
        }
      ],
      "name": "getBlockhash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "n",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "h",
          "type": "bytes32"
        }
      ],
      "name": "godmodeSetHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "n",
          "type": "uint256"
        }
      ],
      "name": "store",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "storeEarliest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "n",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "header",
          "type": "bytes"
        }
      ],
      "name": "storeVerifyHeader",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "ast": {
    "absolutePath": "contracts/chainlink_contracts/chainlink/tests/BlockhashStoreTestHelper.sol",
    "exportedSymbols": {
      "BlockhashStoreTestHelper": [
        11543
      ]
    },
    "id": 11544,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11525,
        "literals": [
          "solidity",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:47"
      },
      {
        "absolutePath": "contracts/chainlink_contracts/chainlink/dev/BlockhashStore.sol",
        "file": "../dev/BlockhashStore.sol",
        "id": 11526,
        "nodeType": "ImportDirective",
        "scope": 11544,
        "sourceUnit": 10959,
        "src": "24:35:47",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11527,
              "name": "BlockhashStore",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10958,
              "src": "98:14:47",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BlockhashStore_$10958",
                "typeString": "contract BlockhashStore"
              }
            },
            "id": 11528,
            "nodeType": "InheritanceSpecifier",
            "src": "98:14:47"
          }
        ],
        "contractDependencies": [
          10958
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 11543,
        "linearizedBaseContracts": [
          11543,
          10958
        ],
        "name": "BlockhashStoreTestHelper",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 11541,
              "nodeType": "Block",
              "src": "170:31:47",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 11539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 11535,
                        "name": "s_blockhashes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10863,
                        "src": "176:13:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                          "typeString": "mapping(uint256 => bytes32)"
                        }
                      },
                      "id": 11537,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 11536,
                        "name": "n",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11530,
                        "src": "190:1:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "176:16:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 11538,
                      "name": "h",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11532,
                      "src": "195:1:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "176:20:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 11540,
                  "nodeType": "ExpressionStatement",
                  "src": "176:20:47"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "898faab2",
            "id": 11542,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "godmodeSetHash",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 11533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11530,
                  "mutability": "mutable",
                  "name": "n",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11542,
                  "src": "141:9:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11529,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "141:7:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11532,
                  "mutability": "mutable",
                  "name": "h",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11542,
                  "src": "152:9:47",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 11531,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "152:7:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "140:22:47"
            },
            "returnParameters": {
              "id": 11534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "170:0:47"
            },
            "scope": 11543,
            "src": "117:84:47",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 11544,
        "src": "61:142:47"
      }
    ],
    "src": "0:204:47"
  },
  "bytecode": "0x608060405234801561001057600080fd5b5061041d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80636057361d1461005c57806383b6d6b71461008a578063898faab214610094578063e9413d38146100cc578063fadff0e11461010e575b600080fd5b6100886004803603602081101561007257600080fd5b81019080803590602001909291905050506101d3565b005b61009261026d565b005b6100ca600480360360408110156100aa57600080fd5b81019080803590602001909291908035906020019092919050505061027c565b005b6100f8600480360360208110156100e257600080fd5b8101908080359060200190929190505050610297565b6040518082815260200191505060405180910390f35b6101d16004803603604081101561012457600080fd5b81019080803590602001909291908035906020019064010000000081111561014b57600080fd5b82018360208201111561015d57600080fd5b8035906020019184600183028401116401000000008311171561017f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610331565b005b6000814090506000801b811415610252576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f626c6f636b68617368286e29206661696c65640000000000000000000000000081525060200191505060405180910390fd5b80600080848152602001908152602001600020819055505050565b61027a61010043036101d3565b565b80600080848152602001908152602001600020819055505050565b6000806000808481526020019081526020016000205490506000801b811415610328576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f626c6f636b68617368206e6f7420666f756e6420696e2073746f72650000000081525060200191505060405180910390fd5b80915050919050565b600080600184018152602001908152602001600020548180519060200120146103c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f6865616465722068617320756e6b6e6f776e20626c6f636b686173680000000081525060200191505060405180910390fd5b600060248201519050806000808581526020019081526020016000208190555050505056fea26469706673582212205dc53bb5bde5b04f1f31460b1f1bf0e82a8a8a6601425ef4239b7a061cc5e1db64736f6c63430006060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80636057361d1461005c57806383b6d6b71461008a578063898faab214610094578063e9413d38146100cc578063fadff0e11461010e575b600080fd5b6100886004803603602081101561007257600080fd5b81019080803590602001909291905050506101d3565b005b61009261026d565b005b6100ca600480360360408110156100aa57600080fd5b81019080803590602001909291908035906020019092919050505061027c565b005b6100f8600480360360208110156100e257600080fd5b8101908080359060200190929190505050610297565b6040518082815260200191505060405180910390f35b6101d16004803603604081101561012457600080fd5b81019080803590602001909291908035906020019064010000000081111561014b57600080fd5b82018360208201111561015d57600080fd5b8035906020019184600183028401116401000000008311171561017f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610331565b005b6000814090506000801b811415610252576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f626c6f636b68617368286e29206661696c65640000000000000000000000000081525060200191505060405180910390fd5b80600080848152602001908152602001600020819055505050565b61027a61010043036101d3565b565b80600080848152602001908152602001600020819055505050565b6000806000808481526020019081526020016000205490506000801b811415610328576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f626c6f636b68617368206e6f7420666f756e6420696e2073746f72650000000081525060200191505060405180910390fd5b80915050919050565b600080600184018152602001908152602001600020548180519060200120146103c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f6865616465722068617320756e6b6e6f776e20626c6f636b686173680000000081525060200191505060405180910390fd5b600060248201519050806000808581526020019081526020016000208190555050505056fea26469706673582212205dc53bb5bde5b04f1f31460b1f1bf0e82a8a8a6601425ef4239b7a061cc5e1db64736f6c63430006060033",
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang",
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "evmVersion": "petersburg"
  }
}
